/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.clWRAP {

using System;
using System.Runtime.InteropServices;

public class CASessionCall : CASession {
  private HandleRef swigCPtr;

  internal CASessionCall(IntPtr cPtr, bool cMemoryOwn) : base(clWRAPPINVOKE.CASessionCall_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CASessionCall obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CASessionCall() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          clWRAPPINVOKE.delete_CASessionCall(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public override string getObjectId() {
    string ret = clWRAPPINVOKE.CASessionCall_getObjectId(swigCPtr);
    return ret;
  }

  public virtual bool setIceCallback(CASessionCallIceCallbackObj oIceCallback) {
    bool ret = clWRAPPINVOKE.CASessionCall_setIceCallback(swigCPtr, CASessionCallIceCallbackObj.getCPtr(oIceCallback));
    if (clWRAPPINVOKE.SWIGPendingException.Pending) throw clWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool setVideoDisplays(CAMediaType_t eVideoType, long displayLocal, long displayRemote) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoDisplays__SWIG_0(swigCPtr, (int)eVideoType, displayLocal, displayRemote);
    return ret;
  }

  public virtual bool setVideoDisplays(CAMediaType_t eVideoType, long displayLocal) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoDisplays__SWIG_1(swigCPtr, (int)eVideoType, displayLocal);
    return ret;
  }

  public virtual bool setVideoDisplays(CAMediaType_t eVideoType) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoDisplays__SWIG_2(swigCPtr, (int)eVideoType);
    return ret;
  }

  public virtual bool call(CAMediaType_t eMediaType, string strDestUserId) {
    bool ret = clWRAPPINVOKE.CASessionCall_call(swigCPtr, (int)eMediaType, strDestUserId);
    if (clWRAPPINVOKE.SWIGPendingException.Pending) throw clWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool acceptEvent(CASignalingCallEventObj e) {
    bool ret = clWRAPPINVOKE.CASessionCall_acceptEvent(swigCPtr, CASignalingCallEventObj.getCPtr(e));
    if (clWRAPPINVOKE.SWIGPendingException.Pending) throw clWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool rejectEvent(CASignalingObj oSignaling, CASignalingCallEventObj e) {
    bool ret = clWRAPPINVOKE.CASessionCall_rejectEvent(CASignalingObj.getCPtr(oSignaling), CASignalingCallEventObj.getCPtr(e));
    if (clWRAPPINVOKE.SWIGPendingException.Pending) throw clWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool setMute(bool bMuted, CAMediaType_t eMediaType) {
    bool ret = clWRAPPINVOKE.CASessionCall_setMute__SWIG_0(swigCPtr, bMuted, (int)eMediaType);
    return ret;
  }

  public virtual bool setMute(bool bMuted) {
    bool ret = clWRAPPINVOKE.CASessionCall_setMute__SWIG_1(swigCPtr, bMuted);
    return ret;
  }

  public virtual bool hangup() {
    bool ret = clWRAPPINVOKE.CASessionCall_hangup(swigCPtr);
    return ret;
  }

  public virtual bool setVideoFps(int nFps, CAMediaType_t eMediaType) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoFps__SWIG_0(swigCPtr, nFps, (int)eMediaType);
    return ret;
  }

  public virtual bool setVideoFps(int nFps) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoFps__SWIG_1(swigCPtr, nFps);
    return ret;
  }

  public virtual bool setVideoBandwidthUploadMax(int nMax, CAMediaType_t eMediaType) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoBandwidthUploadMax__SWIG_0(swigCPtr, nMax, (int)eMediaType);
    return ret;
  }

  public virtual bool setVideoBandwidthUploadMax(int nMax) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoBandwidthUploadMax__SWIG_1(swigCPtr, nMax);
    return ret;
  }

  public virtual bool setVideoBandwidthDownloadMax(int nMax, CAMediaType_t eMediaType) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoBandwidthDownloadMax__SWIG_0(swigCPtr, nMax, (int)eMediaType);
    return ret;
  }

  public virtual bool setVideoBandwidthDownloadMax(int nMax) {
    bool ret = clWRAPPINVOKE.CASessionCall_setVideoBandwidthDownloadMax__SWIG_1(swigCPtr, nMax);
    return ret;
  }

  public virtual string getCallId() {
    string ret = clWRAPPINVOKE.CASessionCall_getCallId(swigCPtr);
    return ret;
  }

  public virtual CAMediaType_t getMediaType() {
    CAMediaType_t ret = (CAMediaType_t)clWRAPPINVOKE.CASessionCall_getMediaType(swigCPtr);
    return ret;
  }

  public virtual CAIceState_t getIceState() {
    CAIceState_t ret = (CAIceState_t)clWRAPPINVOKE.CASessionCall_getIceState(swigCPtr);
    return ret;
  }

  public static CASessionCallObj newObj(CASignalingObj signalingSession) {
    CASessionCallObj ret = new CASessionCallObj(clWRAPPINVOKE.CASessionCall_newObj__SWIG_0(CASignalingObj.getCPtr(signalingSession)), true);
    if (clWRAPPINVOKE.SWIGPendingException.Pending) throw clWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static CASessionCallObj newObj(CASignalingObj signalingSession, CASignalingCallEventObj offer) {
    CASessionCallObj ret = new CASessionCallObj(clWRAPPINVOKE.CASessionCall_newObj__SWIG_1(CASignalingObj.getCPtr(signalingSession), CASignalingCallEventObj.getCPtr(offer)), true);
    if (clWRAPPINVOKE.SWIGPendingException.Pending) throw clWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
